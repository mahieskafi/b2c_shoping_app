buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'appmetrica-plugin'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://github.com/hafhashtadacc/mavenrepo/raw/master/releases/aar" }
}

appmetrica {
    postApiKey = { applicationVariant -> "e45c4686-df52-4f7d-95a7-81a6dbbe4dfe" }
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.srp.ewayspanel"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 15
        versionName "1.0.13"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_URL", "\"https://panel.eways.co/api/\""
            buildConfigField "String", "DARGAH_URL", "\"https://panel.eways.co\""
        }
        debug {
            debuggable true
            minifyEnabled false
//            applicationIdSuffix '.debug'
            versionNameSuffix '_test_sprint7'
            buildConfigField "String", "SERVER_URL", "\"https://panel.eways.co/api/\""
            buildConfigField "String", "DARGAH_URL", "\"https://panel.eways.co\""
        }
    }

    flavorDimensions "serverMode"

    productFlavors {
        real {
            dimension "serverMode"
        }
        mock {
//            applicationIdSuffix ".mock"
            dimension "serverMode"
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
    sourceSets {
        real { java.srcDirs = ['src/real/java/'] }
        mock { java.srcDirs = ['src/mock/java'] }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
//    buildToolsVersion = '29.0.2'
}

dependencies {
    def work_version = "2.5.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // glide
    implementation ("com.github.bumptech.glide:glide:4.12.0") {
        exclude group: "com.android.support"
    }
    kapt 'androidx.annotation:annotation:1.1.0'
    implementation ("com.github.bumptech.glide:glide:4.12.0@aar") {
        transitive = true
    }
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'

    // ABMyApp
    implementation 'ir.abmyapp:abmyapp:1.0.6'

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.12.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    testImplementation 'org.robolectric:robolectric:3.4.2'
    testImplementation "android.arch.core:core-testing:1.1.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //analytics
    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'


    //room
    implementation 'android.arch.persistence.room:runtime:1.1.1'
//    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    kapt "android.arch.persistence.room:compiler:1.1.1"

    implementation "androidx.room:room-runtime:2.2.6"
    kapt "androidx.room:room-compiler:2.2.6"

    // Yashoid
    implementation 'com.yashoid:sequencelayout:1.3.1'
    implementation "com.yashoid:inputformatter:2.0.4"
    implementation 'com.yashoid:office:1.2.0'

    implementation 'com.android.support:multidex:1.0.3'

    implementation project(':persianmaterialdatetimepicker')
    implementation project(path: ':maineways')

    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"


    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'

    implementation 'com.mindorks.android:prdownloader:0.6.0'

    //yandex
    implementation 'com.yandex.android:mobmetricalib:3.20.1'
    implementation 'com.android.installreferrer:installreferrer:2.2'

}
repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
